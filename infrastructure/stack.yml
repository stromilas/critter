AWSTemplateFormatVersion: 2010-09-09
Description: Web Content Infrastructure

Parameters:
  AppName:
    Description: Application Name
    Type: String
  Stage:
    Description: Environment stage
    Type: String
    Default: dev
  TemplateBucket:
    Type: String
  CidrBlock:
    Description: CIDR range for VPC. /16 mask is used for VPC, /20 for each subnet.
    Type: String
    AllowedPattern: (^\d([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5]).\d([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5]).\d([01]?|[0-9][0-9]?|2[0-4][0-9]|25[0-5]).\d([01]?|[0-9][0-9]?|2[0-4][0-9]|25[0-5])$)
    ConstraintDescription: Must be valid CIDR prefix
  DBAutoPause:
    Description: Whether Serverless v1 database should autopause after a period of no use
    Default: true
    Type: String
    AllowedValues: [true, false]
  DBName:
    Description: Database name
    Type: String

Resources:
  WebStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${TemplateBucket}.s3.${AWS::Region}.${AWS::URLSuffix}/templates/web.yml
      Parameters:
        Stage: !Ref Stage

  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${TemplateBucket}.s3.${AWS::Region}.${AWS::URLSuffix}/templates/network.yml
      Parameters:
        CidrBlock: !Ref CidrBlock

  SecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${TemplateBucket}.s3.${AWS::Region}.${AWS::URLSuffix}/templates/security.yml
      Parameters:
        VPC: { Fn::ImportValue: !Sub "${NetworkStackName}-VPC" }

  DatabaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${TemplateBucket}.s3.${AWS::Region}.${AWS::URLSuffix}/templates/database.yml
      Parameters:
        Stage: !Ref Stage
        EngineVersion: 10.14
        SecondsUntilAutoPause: 900
        AutoPause: !Ref DBAutoPause
        MaxCapacity: 2
        MinCapacity: 2
        DBUsername:
        DBName: !Ref DBName
        DBBackupRetentionPeriod: 1
        ClusterSubnets:
          { Fn::ImportValue: !Sub "${NetworkStackName}-DataSubnets" }
        ClusterSecurityGroup: !GetAtt SecurityGroupStack.Outputs.DatabaseSG

Outputs:
  WebsiteURL:
    Value: !GetAtt WebStack.Outputs.WebsiteURL
